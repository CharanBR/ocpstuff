cat <<EOF > /etc/ansible/hosts
# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
new_nodes
#etcd
#lb
#nfs
#glusterfs

## Set variables common for all OSEv3 hosts
[OSEv3:vars]
deployment_type=openshift-enterprise
#deployment_type=origin
#containerized=true

## non-prod settings
#openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability,package_availability,package_version

#internal brew repos (for beta testing)
#openshift_additional_repos=[{'id': 'ose-devel', 'name': 'ose-devel', 'baseurl': 'http://download.lab.bos.redhat.com/rcm-guest/puddles/RHAOS/AtomicOpenShift/3.6/latest/x86_64/os', 'enabled': 1, 'gpgcheck': 0}]
#openshift_docker_additional_registries=brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888
#openshift_docker_insecure_registries=brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888

## alternate image format string, useful if you've got your own registry mirror
#oreg_url=registry.home.nicknach.net:5000/ocpimages/ose-${component}:${version}
#openshift_examples_modify_imagestreams=true
#openshift_docker_additional_registries=registry.home.nicknach.net:5000
#openshift_docker_blocked_registries=registry.access.redhat.com,docker.io
#openshift_cockpit_deployer_prefix=registry.home.nicknach.net:5000/openshift3/

## If ansible_ssh_user is not root, ansible_sudo must be set to true
ansible_ssh_user=root
#ansible_ssh_user=cloud-user
#ansible_sudo=true
#ansible_become=yes

## release ver
#openshift_release=v3.5
#openshift_image_tag=v3.5.5.8

# enable ntp
openshift_clock_enabled=true

## authentication stuff
## htpasswd file auth
#openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
#openshift_master_htpasswd_users={'test':'$apr1$p.PVCWhK$MF.sGRq8ofCFQSOj1yHU01'}

## ldap auth (AD)
#openshift_master_identity_providers=[{"name":"NNWIN","challenge":true,"login":true,"kind":"LDAPPasswordIdentityProvider","attributes":{"id":["dn"],"email":["mail"],"name":["cn"],"preferredUsername":["sAMAccountName"]},"bindDN":"CN=SVC-nn-ose,OU=SVC,OU=FNA,DC=nnwin,DC=ad,DC=nncorp,DC=com","bindPassword":"<REDACTED>","insecure":true,"url":"ldap://uswin.nicknach.com:389/DC=uswin,DC=ad,DC=nncorp,DC=com?sAMAccountName?sub"}]
#openshift_master_ldap_ca_file=/etc/ssl/certs/NNWINDC_Cert_Chain.pem

## ldap auth (IPA)
openshift_master_identity_providers=[{"name":"myipa","challenge":true,"login":true,"kind":"LDAPPasswordIdentityProvider","attributes":{"id":["dn"],"email":["mail"],"name":["cn"],"preferredUsername":["uid"]},"bindDN":"","bindPassword":"","ca":"my-ldap-ca-bundle.crt","insecure":false,"url":"ldap://$LDAP_SERVER/cn=users,cn=accounts,dc=home,dc=nicknach,dc=net?uid"}]
openshift_master_ldap_ca_file=~/my-ldap-ca-bundle.crt

### NFS-backed OCP services
## registry
#openshift_hosted_registry_storage_kind=nfs
#openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
#openshift_hosted_registry_storage_host=storage.home.nicknach.net
#openshift_hosted_registry_storage_nfs_directory=/home/data/openshift/enterprise
#openshift_hosted_registry_storage_nfs_options='*(rw,root_squash)'
#openshift_hosted_registry_storage_volume_name=docker-registry
#openshift_hosted_registry_storage_volume_size=50Gi
## logging
#openshift_logging_install_logging=true
#openshift_logging_storage_kind=nfs
#openshift_logging_storage_access_modes=['ReadWriteOnce']
#openshift_logging_storage_nfs_directory=/home/data/openshift/enterprise
#openshift_logging_storage_host=storage.home.nicknach.net
#openshift_logging_storage_volume_name=logging
#openshift_logging_storage_volume_size=40Gi
#openshift_logging_storage_labels={'storage':'logging'}
## metrics
#openshift_metrics_install_metrics=true
#openshift_metrics_storage_kind=nfs
#openshift_metrics_storage_access_modes=['ReadWriteOnce']
#openshift_metrics_storage_host=storage.home.nicknach.net
#openshift_metrics_storage_nfs_directory=/home/data/openshift/enterprise
#openshift_metrics_storage_volume_name=metrics
#openshift_metrics_storage_volume_size=30Gi
#openshift_metrics_storage_labels={'storage':'metrics'}
## For prometheus
#openshift_hosted_prometheus_deploy=true
#openshift_prometheus_storage_kind=nfs
#openshift_prometheus_storage_access_modes=['ReadWriteOnce']
#openshift_prometheus_storage_host=storage.home.nicknach.net
#openshift_prometheus_storage_nfs_directory=/home/data/openshift/enterprise
#openshift_prometheus_storage_volume_name=prometheus
#openshift_prometheus_storage_volume_size=30Gi
#openshift_prometheus_storage_labels={'storage':'prometheus'}
#openshift_prometheus_storage_type='pvc'
## For prometheus-alertmanager
#openshift_prometheus_alertmanager_storage_kind=nfs
#openshift_prometheus_alertmanager_storage_access_modes=['ReadWriteOnce']
#openshift_prometheus_alertmanager_storage_host=storage.home.nicknach.net
#openshift_prometheus_alertmanager_storage_nfs_directory=/home/data/openshift/enterprise
#openshift_prometheus_alertmanager_storage_volume_name=prometheus-alertmanager
#openshift_prometheus_alertmanager_storage_volume_size=15Gi
#openshift_prometheus_alertmanager_storage_labels={'storage':'prometheus-alertmanager'}
#openshift_prometheus_alertmanager_storage_type='pvc'
## For prometheus-alertbuffer
#openshift_prometheus_alertbuffer_storage_kind=nfs
#openshift_prometheus_alertbuffer_storage_access_modes=['ReadWriteOnce']
#openshift_prometheus_alertbuffer_storage_host=storage.home.nicknach.net
#openshift_prometheus_alertbuffer_storage_nfs_directory=/home/data/openshift/enterprise
#openshift_prometheus_alertbuffer_storage_volume_name=prometheus-alertbuffer
#openshift_prometheus_alertbuffer_storage_volume_size=10Gi
#openshift_prometheus_alertbuffer_storage_labels={'storage':'prometheus-alertbuffer'}
#openshift_prometheus_alertbuffer_storage_type='pvc'

## deploy the registry on gluster
#openshift_hosted_manage_registry=true
#openshift_hosted_registry_selector='region=infra'
#openshift_hosted_registry_storage_kind=glusterfs

## gluster stuff
#openshift_storage_glusterfs_namespace=glusterfs
#openshift_storage_glusterfs_name=storage

## set the router region
#openshift_hosted_manage_router=true
#openshift_hosted_router_selector='region=infra'

##  cloud provider configs
##  AWS
#openshift_cloudprovider_kind=aws
#openshift_cloudprovider_aws_access_key=
#openshift_cloudprovider_aws_secret_key=
##  Openstack
#openshift_cloudprovider_kind=openstack
#openshift_cloudprovider_openstack_auth_url=https://controller.home.nicknach.com:35357/v2.0
#openshift_cloudprovider_openstack_username=svc-openshift-np
#openshift_cloudprovider_openstack_password=kX7mE10dkX7mE10d
#openshift_cloudprovider_openstack_tenant_id=f741ba7204ec47c9886c050891dd592e
#openshift_cloudprovider_openstack_tenant_name=nn-dev
#openshift_cloudprovider_openstack_region=RegionOne
#openshift_cloudprovider_openstack_lb_subnet_id=d7c61f2a-d591-461d-af28-308ade046c0d
##  GCE
#openshift_cloudprovider_kind=gce

## domain stuff
openshift_master_default_subdomain=$APPS_DOMAIN

## cluster stuff (uncomment for multi-master mode)
#openshift_master_cluster_method=native
#openshift_master_cluster_hostname=api.$ROOT_DOMAIN
#openshift_master_cluster_public_hostname=console.$ROOT_DOMAIN

## network stuff
#os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
# set these if you are behind a proxy
#openshift_http_proxy=http://192.168.0.254:3128
#openshift_https_proxy=http://192.168.0.254:3128
#openshift_no_proxy=.$ROOT_DOMAIN,.$APPS_DOMAIN

## use these if there is a network IP conflict
#osm_cluster_network_cidr=10.129.0.0/14
#openshift_portal_net=172.31.0.0/16

#openshift_master_public_api_url=https://api.$ROOT_DOMAIN:443
#openshift_master_public_console_url=https://console.$ROOT_DOMAIN:443/console
#openshift_master_api_port=443
#openshift_master_console_port=443

## adjust max pods for scale testing
#openshift_node_kubelet_args={'max-pods': ['225'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
## adjust scheduler
#osm_controller_args={'node-monitor-period': ['2s'], 'node-monitor-grace-period': ['16s'], 'pod-eviction-timeout': ['30s']}

## nfs host, if needed.
#[nfs]
#nfs.$ROOT_DOMAIN

## start group definitions ##
## load balancer
#[lb]
#lb.$ROOT_DOMAIN

## host group for etcd (uncomment for multi-master)
#[etcd]
#master01.$ROOT_DOMAIN
#master02.$ROOT_DOMAIN
#master03.$ROOT_DOMAIN

## host group for masters
[masters]
master01.$ROOT_DOMAIN
#master02.$ROOT_DOMAIN
#master03.$ROOT_DOMAIN

[nodes]
master01.$ROOT_DOMAIN openshift_node_labels="{'region': 'masters', 'zone': 'a'}" openshift_schedulable=false
#master02.$ROOT_DOMAIN openshift_node_labels="{'region': 'masters', 'zone': 'b'}" openshift_schedulable=false
#master03.$ROOT_DOMAIN openshift_node_labels="{'region': 'masters', 'zone': 'c'}" openshift_schedulable=false
#infra01.$ROOT_DOMAIN openshift_node_labels="{'region': 'infra', 'zone': 'a'}" openshift_schedulable=true
#infra02.$ROOT_DOMAIN openshift_node_labels="{'region': 'infra', 'zone': 'b'}" openshift_schedulable=true
#infra03.$ROOT_DOMAIN openshift_node_labels="{'region': 'infra', 'zone': 'c'}" openshift_schedulable=true
node01.$ROOT_DOMAIN openshift_node_labels="{'region': 'primary', 'zone': 'a'}"
node02.$ROOT_DOMAIN openshift_node_labels="{'region': 'primary', 'zone': 'b'}"
node03.$ROOT_DOMAIN openshift_node_labels="{'region': 'primary', 'zone': 'c'}"

## if using gluster (Container Native Storage)
#[glusterfs]
#infra01.$ROOT_DOMAIN  glusterfs_devices='[ "/dev/vdc"]'
#infra02.$ROOT_DOMAIN  glusterfs_devices='[ "/dev/vdc"]'
#infra03.$ROOT_DOMAIN  glusterfs_devices='[ "/dev/vdc"]'
#node01.$ROOT_DOMAIN  glusterfs_devices='[ "/dev/vdc"]'
#node02.$ROOT_DOMAIN  glusterfs_devices='[ "/dev/vdc"]'
#node03.$ROOT_DOMAIN  glusterfs_devices='[ "/dev/vdc"]'

[new_nodes]
## hold for use when adding new nodes


EOF


# Verify that your /etc/ansible/hosts file looks good
