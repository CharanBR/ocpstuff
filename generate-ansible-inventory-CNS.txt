cat <<EOF > /etc/ansible/hosts
# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
etcd
lb
glusterfs
glusterfs_registry

## Set variables common for all OSEv3 hosts
[OSEv3:vars]
deployment_type=openshift-enterprise

##internal image repos
openshift_docker_additional_registries=repo.home.nicknach.net:5000
openshift_docker_insecure_registries=repo.home.nicknach.net:5000
openshift_docker_blocked_registries=registry.access.redhat.com,docker.io
oreg_url=repo.home.nicknach.net:5000/openshift3/ose-\${component}:\${version}
openshift_examples_modify_imagestreams=true
openshift_metrics_image_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_metrics_image_version=v3.9.4
openshift_logging_image_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_logging_image_version=v3.9.4
ansible_service_broker_image_prefix=repo.home.nicknach.net:5000/openshift3/ose-
ansible_service_broker_image_tag=v3.9.4
ansible_service_broker_etcd_image_prefix=repo.home.nicknach.net:5000/rhel7/
ansible_service_broker_etcd_image_tag=latest
openshift_service_catalog_image_prefix=repo.home.nicknach.net:5000/openshift3/ose-
openshift_service_catalog_image_version=v3.9.4
openshift_cockpit_deployer_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_web_console_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_web_console_version=v3.9.4
openshift_prometheus_image_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_prometheus_image_version=v3.9.4
openshift_prometheus_alertmanager_image_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_prometheus_alertmanager_image_version=v3.9.4
openshift_prometheus_alertbuffer_image_prefix=repo.home.nicknach.net:5000/openshift3/
openshift_prometheus_alertbuffer_image_version=v3.9.4
template_service_broker_prefix=repo.home.nicknach.net:5000/openshift3/ose-
template_service_broker_version=v3.9.4

ansible_ssh_user=root

## release ver
#openshift_release=v3.9.4
#openshift_image_tag=v3.9.4

## ldap auth (IPA)
openshift_master_identity_providers=[{"name":"myipa","challenge":true,"login":true,"kind":"LDAPPasswordIdentityProvider","attributes":{"id":["dn"],"email":["mail"],"name":["cn"],"preferredUsername":["uid"]},"bindDN":"","bindPassword":"","ca":"my-ldap-ca-bundle.crt","insecure":false,"url":"ldap://$LDAP_SERVER/cn=users,cn=accounts,dc=home,dc=nicknach,dc=net?uid"}]
openshift_master_ldap_ca_file=~/my-ldap-ca-bundle.crt

## registry
openshift_hosted_registry_storage_kind=glusterfs
## metrics
openshift_metrics_storage_kind=dynamic
## logging
openshift_logging_es_pvc_size=10Gi
openshift_logging_storage_kind=dynamic
openshift_storage_glusterfs_namespace=app-storage
# Automatically create a StorageClass referencing this CNS cluster
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_block_deploy=false
## Second CNS storage cluster for OpenShift infrastructure
# Namespace for CNS pods (will be created)
openshift_storage_glusterfs_registry_namespace=infra-storage
# No StorageClass; this cluster should not need to provide dynamic provisioning
openshift_storage_glusterfs_registry_storageclass=false
openshift_storage_glusterfs_registry_block_deploy=true
# Size of automatically created block-hosting volumes,
# must be at least the size of your largest desired block volume
openshift_storage_glusterfs_registry_block_host_vol_size=50
# Create StorageClass, used by Logging and Metrics
openshift_storage_glusterfs_registry_block_storageclass=true
# StorageClass needs to be cluster default for Logging/Metrics provisioning
openshift_storage_glusterfs_registry_block_storageclass_default=true
# Disable any other default StorageClass
openshift_storageclass_default=false

## etcd on nfs
openshift_hosted_etcd_storage_kind=nfs
openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_host=storage.home.nicknach.net
#openshift_hosted_etcd_storage_nfs_directory=/data/openshift/enterprise
openshift_hosted_etcd_storage_nfs_options="*(rw,root_squash,sync,no_wdelay)"
openshift_hosted_etcd_storage_volume_name=etcd 
openshift_hosted_etcd_storage_volume_size=1Gi
openshift_hosted_etcd_storage_labels={'storage':'etcd'}

## disable checks
#openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability,package_availability,package_version

## cluster stuff (uncomment for multi-master mode)
openshift_master_cluster_method=native
openshift_master_cluster_hostname=api.$ROOT_DOMAIN
openshift_master_cluster_public_hostname=console.$ROOT_DOMAIN

## load balancer
[lb]
lb.$ROOT_DOMAIN

## host group for etcd (uncomment for multi-master)
[etcd]
master01.$ROOT_DOMAIN
master02.$ROOT_DOMAIN
master03.$ROOT_DOMAIN

## host group for masters
[masters]
master01.$ROOT_DOMAIN
master02.$ROOT_DOMAIN
master03.$ROOT_DOMAIN

[nodes]
master01.$ROOT_DOMAIN openshift_node_labels="{'role': 'master'}" openshift_schedulable=true
master02.$ROOT_DOMAIN openshift_node_labels="{'role': 'master'}" openshift_schedulable=true
master03.$ROOT_DOMAIN openshift_node_labels="{'role': 'master'}" openshift_schedulable=true
infra01.$ROOT_DOMAIN openshift_node_labels="{'role': 'infra'}" openshift_schedulable=true
infra02.$ROOT_DOMAIN openshift_node_labels="{'role': 'infra'}" openshift_schedulable=true
infra03.$ROOT_DOMAIN openshift_node_labels=""{'role': 'infra'}" openshift_schedulable=true
node01.$ROOT_DOMAIN openshift_node_labels="{'role': 'app'}" openshift_schedulable=true
node02.$ROOT_DOMAIN openshift_node_labels="{'role': 'app'}" openshift_schedulable=true
node03.$ROOT_DOMAIN openshift_node_labels="{'role': 'app'}" openshift_schedulable=true

## if using gluster (Container Native Storage)
[glusterfs]
node01.$ROOT_DOMAIN glusterfs_devices='[ "/dev/vdc", "/dev/vdd" ]'
node02.$ROOT_DOMAIN glusterfs_devices='[ "/dev/vdc", "/dev/vdd" ]'
node03.$ROOT_DOMAIN glusterfs_devices='[ "/dev/vdc", "/dev/vdd" ]'

[glusterfs_registry]
infra01.oscpgluster.com glusterfs_devices='[ "/dev/vdd" ]'
infra02.oscpgluster.com glusterfs_devices='[ "/dev/vdd" ]'
infra03.oscpgluster.com glusterfs_devices='[ "/dev/vdd" ]'

EOF
 
# Verify that your /etc/ansible/hosts file looks good

